---
import { getCategoryList, getBlogList } from "@libs/microcms.ts";
import Layout from "@layouts/Layout.astro";
import BlogList from "@components/BlogList.astro";
import Pagination from "@components/Pagination.astro";
import CategoryList from "@components/CategoryList.astro";
import { LIMIT } from "@constants/index.ts";
export const prerender = true;

export async function getStaticPaths() {
  const { contents: categories } = await getCategoryList();
  return categories.map((category) => ({
    params: { id: category.id },
  }));
}

const { id } = Astro.params;

const { contents: categories } = await getCategoryList();

const category = categories.find((cat) => cat.id === id);

const { contents: blogs, totalCount } = category
  ? await getBlogList({
      limit: LIMIT,
      filters: `category[contains]${category.id}`,
    })
  : { contents: [], totalCount: 0 };

const Meta = {
  title: category ? `${category.name} の記事一覧` : "カテゴリが見つかりません",
};
---

<Layout Meta={Meta}>
  <div class="space-y-8">
    <h1 class="text-xl font-medium mb-6">
      {category ? `${category.name} の記事一覧` : "カテゴリが見つかりません"}
    </h1>

    {
      category ? (
        <>
          <BlogList blogs={blogs} />
          <Pagination
            totalCount={totalCount}
            current={1}
            basePath={`/category/${id}`}
            category={id}
          />
        </>
      ) : (
        <p>このカテゴリは存在しません。</p>
      )
    }
  </div>

  <div class="space-y-8">
    <CategoryList categories={categories} />
  </div>
</Layout>
